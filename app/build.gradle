apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'jacoco'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"

    defaultConfig {
        applicationId "com.raywenderlich.android.simplecalculator"
        minSdkVersion 22
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            testCoverageEnabled true
        }
    }
}

jacoco {
    toolVersion = "0.8.5"
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    androidTestImplementation 'com.kaspersky.android-components:kaspresso:1.1.0'
}

tasks.withType(Test) {
    jacoco.includeNoLocationClasses = true
}

//// Files with such regex patterns are to be executed
//def fileFilter = ['**/R.class', '**/R$.class', '**/BuildConfig.*',
//                  '**/Manifest*.*', '**/*Test*.*', 'android/**/*.*']
//
//// Location of generated output classes
//def debugTree = fileTree(dir: "$project.buildDir/tmp/kotlin-classes/debug",
//        excludes: fileFilter)
//
//// Source code directory
//def mainSrc = "$project.projectDir/src/main/java"
//
//// Task declaration
//task jacocoTestReport(type: JacocoReport) {
//    // Runs only after the dependencies are executed
//    dependsOn = ['testDebugUnitTest', 'createDebugCoverageReport']
//    // Export formats
//    reports {
//        xml.enabled = true
//        html.enabled = true
//    }
//
//    sourceDirectories.setFrom(files[mainSrc])
//    classDirectories.setFrom(files[debugTree])
//
//    // Inform Gradle where the files generated by test cases - are located
//    executionData.from = fileTree(dir: project.buildDir, includes: [
//            'jacoco/testDebugUnitTest.exec',
//            'outputs/code_coverage/debugAndroidTest/connected/*.ec'
//    ])
//}